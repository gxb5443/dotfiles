
"autocmd MyAutoCmd CompleteDone * pclose!

let g:python3_host_prog = '/usr/local/bin/python3'
let g:python3_host_skip_check = 1

set completeopt+=noinsert,noselect

let g:deoplete#enable_at_startup = 1
let g:deoplete#enable_smart_case = 1
let g:deoplete#ignore_sources = {}
let g:deoplete#ignore_sources._ = ['buffer', 'member', 'tag', 'file', 'neosnippet']
let g:deoplete#sources#go#sort_class = ['package', 'func', 'type', 'var', 'const']

" Use partial fuzzy matches like YouCompleteMe
call deoplete#custom#source('_', 'matchers', ['matcher_full_fuzzy'])

let g:deoplete#auto_completion_start_length = 2

let g:deoplete#keyword_patterns = {}
let g:deoplete#keyword_patterns._ = '[a-zA-Z_]\k*\(?'

let g:deoplete#sources#go = 'vim-go'

let g:deoplete#omni#functions = {}
let g:deoplete#omni#input_patterns = {}
let g:deoplete#omni#input_patterns.python = ''

call deoplete#custom#source('_', 'converters', ['converter_remove_paren'])

call deoplete#custom#source('_', 'disabled_syntaxes', ['Comment', 'String'])

inoremap <expr><C-h>
        \ deoplete#smart_close_popup()."\<C-h>"
inoremap <expr><BS>
        \ deoplete#smart_close_popup()."\<C-h>"
inoremap <silent> <CR> <C-r>=<SID>my_cr_function()<CR>
function! s:my_cr_function()
    return (pumvisible() ? "\<C-y>" : "" ) . "\<CR>"
endfunction
inoremap <expr><TAB>  pumvisible() ? "\<C-n>" : "\<TAB>"

autocmd InsertLeave,CompleteDone * if pumvisible() == 0 | pclose | endif


function! s:check_back_space() abort "{{{
    let col = col('.') - 1
    return !col || getline('.')[col - 1]  =~ '\s'
  endfunction"}}}

function! s:is_whitespace() "{{{
  let col = col('.') - 1
  return !col || getline('.')[col - 1]  =~? '\s'
endfunction "}}}

let g:jedi#auto_vim_configuration = 1
let g:jedi#documentation_command = "<leader>k"
let g:deoplete#sources#jedi#enable_cache = 1
